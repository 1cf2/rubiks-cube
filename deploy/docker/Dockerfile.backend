# Backend production container with Node.js 18 alpine
FROM node:18-alpine AS backend-production

# Create app user for security
RUN addgroup -g 1001 -S nodejs && \
    adduser -S backend -u 1001

# Set working directory
WORKDIR /app

# Copy package files for dependency installation
COPY package*.json lerna.json ./
COPY packages/api-server/package*.json ./packages/api-server/
COPY packages/shared/package*.json ./packages/shared/
COPY packages/cube-engine/package*.json ./packages/cube-engine/

# Install production dependencies only
RUN npm ci --only=production --workspace=packages/api-server --workspace=packages/shared --workspace=packages/cube-engine

# Copy built source code
COPY packages/api-server ./packages/api-server/
COPY packages/shared ./packages/shared/
COPY packages/cube-engine ./packages/cube-engine/

# Copy TypeScript configuration
COPY tsconfig.json ./

# Build the backend application
RUN npm run build --workspace=packages/api-server

# Change ownership to app user
RUN chown -R backend:nodejs /app

# Switch to non-root user
USER backend

# Expose application port
EXPOSE 3001

# Health check
HEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \
    CMD wget --no-verbose --tries=1 --spider http://localhost:3001/health || exit 1

# Start the application
CMD ["npm", "start", "--workspace=packages/api-server"]