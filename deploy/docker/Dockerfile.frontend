# Multi-stage build: Node.js 18-alpine builder â†’ nginx:alpine production
FROM node:18-alpine AS builder

# Set working directory
WORKDIR /app

# Copy package files for dependency installation
COPY package*.json lerna.json ./
COPY packages/web-app/package*.json ./packages/web-app/
COPY packages/shared/package*.json ./packages/shared/
COPY packages/cube-engine/package*.json ./packages/cube-engine/
COPY packages/three-renderer/package*.json ./packages/three-renderer/

# Install dependencies
RUN npm ci

# Copy source code
COPY packages/ ./packages/
COPY tools/ ./tools/
COPY tsconfig.json ./

# Build the frontend application
RUN npm run build --workspace=packages/web-app

# Production stage with nginx
FROM nginx:alpine AS production

# Copy built assets from builder stage
COPY --from=builder /app/packages/web-app/dist /usr/share/nginx/html

# Create nginx configuration for SPA and security headers
RUN cat > /etc/nginx/conf.d/default.conf << 'EOF'
server {
    listen 80;
    server_name localhost;
    
    # Security headers for WebGL applications
    add_header X-Frame-Options DENY always;
    add_header X-Content-Type-Options nosniff always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-eval'; style-src 'self' 'unsafe-inline'; img-src 'self' data:; font-src 'self';" always;
    
    # Serve static files
    location / {
        root /usr/share/nginx/html;
        index index.html index.htm;
        try_files $uri $uri/ /index.html;
    }
    
    # Cache static assets
    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
    }
    
    # Health check endpoint
    location /health {
        access_log off;
        return 200 "healthy\n";
        add_header Content-Type text/plain;
    }
}
EOF

# Expose port 80
EXPOSE 80

# Start nginx
CMD ["nginx", "-g", "daemon off;"]