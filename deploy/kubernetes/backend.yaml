apiVersion: apps/v1
kind: Deployment
metadata:
  name: rubiks-backend
  labels:
    app: rubiks-backend
    component: backend
spec:
  replicas: 2
  selector:
    matchLabels:
      app: rubiks-backend
  template:
    metadata:
      labels:
        app: rubiks-backend
        component: backend
    spec:
      containers:
      - name: backend
        image: ghcr.io/REPO_NAME/rubiks-cube-backend:latest
        ports:
        - containerPort: 3001
        resources:
          requests:
            memory: "256Mi"
            cpu: "100m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /health
            port: 3001
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /health
            port: 3001
          initialDelaySeconds: 10
          periodSeconds: 5
        env:
        - name: NODE_ENV
          value: "production"
        - name: PORT
          value: "3001"
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: rubiks-secrets
              key: database-url
        - name: REDIS_URL
          valueFrom:
            secretKeyRef:
              name: rubiks-secrets
              key: redis-url
        - name: JWT_SECRET
          valueFrom:
            secretKeyRef:
              name: rubiks-secrets
              key: jwt-secret
      imagePullSecrets:
      - name: ghcr-secret

---
apiVersion: v1
kind: Service
metadata:
  name: rubiks-backend-service
  labels:
    app: rubiks-backend
spec:
  selector:
    app: rubiks-backend
  ports:
  - protocol: TCP
    port: 3001
    targetPort: 3001
  type: ClusterIP

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: rubiks-backend-ingress
  annotations:
    kubernetes.io/ingress.class: "nginx"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/cors-allow-origin: "https://rubikscube.app"
spec:
  tls:
  - hosts:
    - api.rubikscube.app
    secretName: rubiks-backend-tls
  rules:
  - host: api.rubikscube.app
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: rubiks-backend-service
            port:
              number: 3001