apiVersion: v1
kind: Namespace
metadata:
  name: rubiks-staging

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: rubiks-frontend-staging
  namespace: rubiks-staging
  labels:
    app: rubiks-frontend
    environment: staging
spec:
  replicas: 2
  selector:
    matchLabels:
      app: rubiks-frontend
      environment: staging
  template:
    metadata:
      labels:
        app: rubiks-frontend
        environment: staging
    spec:
      containers:
      - name: frontend
        image: ghcr.io/REPO_NAME/rubiks-cube-frontend:develop
        ports:
        - containerPort: 80
        resources:
          requests:
            memory: "32Mi"
            cpu: "25m"
          limits:
            memory: "64Mi"
            cpu: "50m"
        env:
        - name: NODE_ENV
          value: "staging"
        - name: PERFORMANCE_MODE
          value: "optimized"
        livenessProbe:
          httpGet:
            path: /health
            port: 80
          initialDelaySeconds: 30
          periodSeconds: 10

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: rubiks-backend-staging
  namespace: rubiks-staging
  labels:
    app: rubiks-backend
    environment: staging
spec:
  replicas: 1
  selector:
    matchLabels:
      app: rubiks-backend
      environment: staging
  template:
    metadata:
      labels:
        app: rubiks-backend
        environment: staging
    spec:
      containers:
      - name: backend
        image: ghcr.io/REPO_NAME/rubiks-cube-backend:develop
        ports:
        - containerPort: 3001
        resources:
          requests:
            memory: "128Mi"
            cpu: "50m"
          limits:
            memory: "256Mi"
            cpu: "250m"
        env:
        - name: NODE_ENV
          value: "staging"
        - name: PORT
          value: "3001"
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: rubiks-staging-secrets
              key: database-url
        - name: REDIS_URL
          valueFrom:
            secretKeyRef:
              name: rubiks-staging-secrets
              key: redis-url
        livenessProbe:
          httpGet:
            path: /health
            port: 3001
          initialDelaySeconds: 30
          periodSeconds: 10

---
apiVersion: v1
kind: Service
metadata:
  name: rubiks-frontend-staging-service
  namespace: rubiks-staging
spec:
  selector:
    app: rubiks-frontend
    environment: staging
  ports:
  - protocol: TCP
    port: 80
    targetPort: 80

---
apiVersion: v1
kind: Service
metadata:
  name: rubiks-backend-staging-service
  namespace: rubiks-staging
spec:
  selector:
    app: rubiks-backend
    environment: staging
  ports:
  - protocol: TCP
    port: 3001
    targetPort: 3001

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: rubiks-staging-ingress
  namespace: rubiks-staging
  annotations:
    kubernetes.io/ingress.class: "nginx"
    cert-manager.io/cluster-issuer: "letsencrypt-staging"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/server-snippet: |
      # Performance monitoring headers
      add_header X-Performance-Mode "staging" always;
      add_header X-Frame-Rate-Monitoring "enabled" always;
spec:
  tls:
  - hosts:
    - staging.rubikscube.app
    - api-staging.rubikscube.app
    secretName: rubiks-staging-tls
  rules:
  - host: staging.rubikscube.app
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: rubiks-frontend-staging-service
            port:
              number: 80
  - host: api-staging.rubikscube.app
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: rubiks-backend-staging-service
            port:
              number: 3001

---
# Performance monitoring configuration for staging
apiVersion: v1
kind: ConfigMap
metadata:
  name: performance-monitoring-config
  namespace: rubiks-staging
data:
  monitoring.js: |
    // Performance monitoring configuration for Three.js testing
    window.PERFORMANCE_CONFIG = {
      frameRateTracking: {
        enabled: true,
        sampleRate: 1000,
        alertThreshold: 45
      },
      memoryMonitoring: {
        enabled: true,
        sampleRate: 5000,
        alertThreshold: 90
      },
      reportingEndpoint: 'https://api-staging.rubikscube.app/performance',
      deviceTesting: {
        mobile: true,
        desktop: true,
        crossBrowser: true
      }
    };