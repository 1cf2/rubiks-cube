version: '3.8'

services:
  # Frontend service
  frontend:
    build:
      context: .
      dockerfile: deploy/docker/Dockerfile.frontend
    ports:
      - "3000:80"
    environment:
      - NODE_ENV=development
    depends_on:
      - backend
    networks:
      - rubiks-network

  # Backend service
  backend:
    build:
      context: .
      dockerfile: deploy/docker/Dockerfile.backend
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://postgres:password@postgres:5432/rubiks_dev
      - REDIS_URL=redis://redis:6379
      - PORT=3001
    depends_on:
      - postgres
      - redis
    networks:
      - rubiks-network

  # PostgreSQL database
  postgres:
    image: postgres:15-alpine
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=rubiks_dev
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - rubiks-network

  # Redis cache
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - rubiks-network

volumes:
  postgres_data:
  redis_data:

networks:
  rubiks-network:
    driver: bridge